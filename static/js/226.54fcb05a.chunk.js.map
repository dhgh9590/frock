{"version":3,"file":"static/js/226.54fcb05a.chunk.js","mappings":"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","sources":["webpack://frock/./src/router/cart/cart.module.css?4517","router/cart/cart.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section1\":\"cart_section1__T8qkT\",\"container\":\"cart_container__qH3NW\",\"cart_list\":\"cart_cart_list__s+1mk\",\"item\":\"cart_item__FVZpJ\",\"img_box\":\"cart_img_box__16ejr\",\"navi\":\"cart_navi__8hzpL\",\"active\":\"cart_active__Gvde7\",\"text_box\":\"cart_text_box__HW6oC\",\"filter\":\"cart_filter__7bYGv\",\"change\":\"cart_change__stCyZ\",\"text\":\"cart_text__kTm8H\",\"icon_box\":\"cart_icon_box__Rhk0w\",\"icon\":\"cart_icon__T+dLx\",\"btt\":\"cart_btt__5Gtk0\",\"cart_all\":\"cart_cart_all__xYjw0\",\"number\":\"cart_number__KNOnr\",\"num_icon\":\"cart_num_icon__pPtyj\"};","import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from './cart.module.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleUp , faAngleDown, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addDetailData } from '../../store';\r\n\r\n\r\nconst Cart = () => {\r\n    let navigate = useNavigate();\r\n    let dispatch = useDispatch();\r\n    let getItem = localStorage.getItem(\"shoppingBag\");\r\n    getItem = JSON.parse(getItem);\r\n    let [data,setData] = useState(getItem.sort((a,b)=>{return a.id - b.id})); //데이터의 id순으로 정렬\r\n    let [allPrice,setAllPrice] = useState(); //아이템 가격 저장\r\n    let [itemCount,setItemCount] = useState(); //아이템 갯수 저장\r\n    let [size,setSize] = useState(); //사이즈 ui 변경\r\n    let [sizeChange,setSizeChange] = useState(); //사이즈 변경값 저장\r\n    let [color,setColor] = useState();//컬러 ui 변경\r\n    let [colorChange,setColorChange] = useState(); //컬러 변경값 저장\r\n    let [imgOver,setImgOver] = useState();\r\n    \r\n\r\n    /* 아이템 삭제 함수 */\r\n    function onRemove(targetId){\r\n        let newData = data.filter((item)=>{ return item.id !== targetId});\r\n        localStorage.setItem(\"shoppingBag\",JSON.stringify(newData));\r\n        setData(newData);\r\n    }\r\n\r\n    /* price계산기 */\r\n    function calculator(){\r\n        let price = data.map((item,index)=>{\r\n            return item.price * item.count\r\n        });\r\n        let newPrice = price.reduce((a,b) => (a+b));\r\n        setAllPrice(Math.floor(newPrice))\r\n    }\r\n\r\n    /* 상품 수량 증가 */\r\n    function countPlus(item,targetId){\r\n        setItemCount(item.count += 1);\r\n        addCount(item,targetId);\r\n    }\r\n    /* 상품 수량 감소 */\r\n    function countMinus(item,targetId){\r\n        if(item.count > 1){\r\n            setItemCount(item.count -= 1)\r\n            addCount(item,targetId);\r\n        }\r\n    }\r\n\r\n    /* 변경된 수량을 로컬스토리지에 저장 */\r\n    function addCount(item,targetId){\r\n        let newData = data.filter((item)=>{ return item.id !== targetId});\r\n        getItem = newData;\r\n        getItem.push(item)\r\n        setData(getItem.sort((a,b)=>{return a.id - b.id}))\r\n        localStorage.setItem(\"shoppingBag\",JSON.stringify(data));\r\n    }\r\n\r\n    \r\n    /* 사이즈 변경 */\r\n    function changeSize(e,item,targetId){\r\n        setSizeChange(item.sizeText = e);\r\n        setTimeout(()=>{\r\n            setSize();\r\n        },0);\r\n        addCount(item,targetId)\r\n    }\r\n\r\n    /* 컬러 변경 */\r\n    function changeColor(e,item,targetId){\r\n        setColorChange(item.colorText = e);\r\n        setTimeout(()=>{\r\n            setColor();\r\n        },0);\r\n        addCount(item,targetId)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(data.length != 0){\r\n            calculator()\r\n        }else{\r\n            setAllPrice(0)\r\n        }\r\n    },[data,addCount])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section className={styles.section1}>\r\n                <div className={styles.container}>\r\n                    <div className={styles.cart_list}>\r\n                        <h2>Cart</h2>\r\n                        <ul>\r\n                            {\r\n                                data && data.map(function(item,index){\r\n                                    return(\r\n                                        <li key={item.id}>\r\n                                            <div className={styles.item}>\r\n                                                <div className={`${styles.img_box} ${imgOver == item.id ? styles.active : null} `} onClick={()=>{navigate(`/Detail/${index}`); dispatch(addDetailData(item))}} onMouseEnter={()=>{setImgOver(item.id)}} onMouseLeave={()=>{setImgOver()}}>\r\n                                                    <div className={styles.navi}>\r\n                                                        <em>{item.title}</em>\r\n                                                    </div>\r\n                                                    <img src={item.url} alt=\"\" />\r\n                                                </div>\r\n                                                <div className={styles.text_box}>\r\n                                                    <div className={styles.filter}>\r\n                                                        <em>{item.filter}</em>\r\n                                                        <strong>${item.price}</strong>\r\n                                                    </div>\r\n                                                    <h4>{item.title}</h4>\r\n                                                    <div className={styles.btt}>\r\n                                                        <ul>\r\n                                                            {\r\n                                                                item.sizeText ? \r\n                                                                <li onClick={()=>{setSize(item.id)}} className={size == item.id ? `${styles.active}` : null}>\r\n                                                                    <div className={styles.change}>\r\n                                                                        <div className={styles.text}>\r\n                                                                            <em>{item.sizeText}</em>\r\n                                                                            <div className={styles.icon_box}>\r\n                                                                                <FontAwesomeIcon icon={faAngleDown} className={styles.icon}/>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <ul>\r\n                                                                        {\r\n                                                                            item.size.map((el,index)=>{\r\n                                                                                return(\r\n                                                                                    <li key={index} onClick={(e)=>{changeSize(e.currentTarget.textContent,item,item.id);}}>{item.size[index]}</li>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                                :null\r\n                                                            }\r\n                                                            {\r\n                                                                item.colorText ?\r\n                                                                <li onClick={()=>{setColor(item.id)}} className={color == item.id ? `${styles.active}` : null}>\r\n                                                                    <div className={styles.change}>\r\n                                                                        <div className={styles.text}>\r\n                                                                            <em>{item.colorText}</em>\r\n                                                                            <div className={styles.icon_box}>\r\n                                                                                <FontAwesomeIcon icon={faAngleDown} className={styles.icon}/>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <ul>\r\n                                                                        {\r\n                                                                            item.color.map((el,index)=>{\r\n                                                                                return(\r\n                                                                                    <li key={index} onClick={(e)=>{changeColor(e.currentTarget.textContent,item,item.id);}}>{item.color[index]}</li>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                                :null\r\n                                                            }\r\n                                                            <li>\r\n                                                                <div className={styles.change}>\r\n                                                                    <div className={styles.text}>\r\n                                                                        <em>{item.count}</em>\r\n                                                                        <div className={styles.icon_box}>\r\n                                                                            <FontAwesomeIcon icon={faAngleUp} className={styles.icon} onClick={()=>{countPlus(item,item.id)}}/>\r\n                                                                            <FontAwesomeIcon icon={faAngleDown} className={styles.icon} onClick={()=>{countMinus(item,item.id)}}/>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <button onClick={()=>{onRemove(item.id)}} ><FontAwesomeIcon icon={faTrash} className={styles.icon}/>Delete</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className={styles.cart_all}>\r\n                        <strong>List</strong>\r\n                        <ul>\r\n                            {\r\n                                data.map((item,index)=>{\r\n                                    return (\r\n                                        <li key={index}>\r\n                                            <p>{item.title}</p>\r\n                                            <p>+ ${item.price * item.count}<em>({item.count})</em></p>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <div className={styles.text}>\r\n                            <em>Total</em>\r\n                            <em>${allPrice}</em>\r\n                        </div>\r\n                        <form action=\"http://dhgh9590.dothome.co.kr/test/form.php\" method='post'>\r\n                            <input className='ir_su' type=\"text\" name=\"all\" defaultValue={JSON.stringify(data)}/>\r\n                            <button className={styles.btt_purchase}>전체 구매하기</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;"],"names":["navigate","useNavigate","dispatch","useDispatch","getItem","localStorage","JSON","parse","useState","sort","a","b","id","data","setData","allPrice","setAllPrice","setItemCount","size","setSize","setSizeChange","color","setColor","setColorChange","imgOver","setImgOver","addCount","item","targetId","newData","filter","push","setItem","stringify","useEffect","length","newPrice","map","index","price","count","reduce","Math","floor","calculator","className","styles","onClick","addDetailData","onMouseEnter","onMouseLeave","title","src","url","alt","sizeText","icon","faAngleDown","el","e","setTimeout","changeSize","currentTarget","textContent","colorText","changeColor","faAngleUp","countPlus","countMinus","onRemove","faTrash","action","method","type","name","defaultValue"],"sourceRoot":""}